@use 'sass:map';
@use 'sass:string';
@use 'sass:list';

@use './map' as *;

// Shamelessly yoinked from: https://stackoverflow.com/a/42295154/12689721
@function split($string, $separator) {
	$split-arr: ();
	$index: string.index($string, $separator);
	@while $index != null {
		$item: string.slice($string, 1, $index - 1);
		$split-arr: append($split-arr, $item);
		$string: string.slice($string, $index + 1);
		$index: string.index($string, $separator);
	}
	$split-arr: append($split-arr, $string);
	@return $split-arr;
}
@function remove-nth($list, $index) {
	$result: ();
	$index: if($index < 0, list.length($list) + $index + 1, $index);

	@for $i from 1 through list.length($list) {
		@if $i != $index {
			$result: append($result, nth($list, $i));
		}
	}

	@return split(list.nth($result, 1), ',');
}
// Shamelessly yoinked from: https://stackoverflow.com/a/62698329/12689721
@function str-trim($string) {
	@if (str-slice($string, 1, 1) == ' ') {
		@return str-trim(str-slice($string, 2));
	} @else if (str-slice($string, str-length($string), -1) == ' ') {
		@return str-trim(str-slice($string, 1, -2));
	} @else {
		@return $string;
	}
}

@function join-list($list, $join: '') {
	$string: '';
	@each $key in $list {
		$string: $string + $join + $key;
	}
	@return string.unquote($string);
}
@function get-class($map, $keys) {
	@each $key in split($keys, '.') {
		$class: map.get($map, $key);
		@if not $class {
			@error 'Unknown element \"#{$key}\" in query: #{$keys}';
		}
		$map: map.get($map, $key);
	}
	@return $map;
}

@function css-selector($keys, $char) {
	$classes: '';
	@each $class in split($keys, $char) {
		$_class: get-class($classmap, $class);
		$classes: if(string.length($classes) == 0, $_class, $classes + $char + $_class);
	}
	@return $classes;
}
